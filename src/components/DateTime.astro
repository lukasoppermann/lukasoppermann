---
import type { HTMLAttributes } from 'astro/types';

export interface Props extends HTMLAttributes<'div'> {
  from: Date | string
  to?: Date | string
  toLabel?: string
  format?: 'YYYY' | 'MMM YYYY',
  class?: string,
  inline?: boolean
}

let { from, toLabel, to, format, class: className, inline, ...attr } = Astro.props
const options: Intl.DateTimeFormatOptions = {
  year: "numeric",
  month: "long",
  day: "2-digit",
}

if(typeof from === 'string') {
  from = new Date(from)
}
if(typeof to === 'string') {
  if (to.toLocaleLowerCase() !== "now") {
    to = new Date(to)
  }
}

if(format === 'YYYY') {
  options.month = undefined
  options.day = undefined
}
if(format === 'MMM YYYY') {
  options.month = "short"
  options.day = undefined
}

const fromOutput = from.toLocaleString('en-EN', options)
const toOutput = to?.toLocaleString('en-EN', options)
---
<style>
  .inline {
    display: inline-block;
  }
</style>
<div class:list={["dateTime", (inline && 'inline') , className]}>
  {fromOutput}
  {fromOutput !== toOutput && toOutput && `â€” ${toOutput}`}
</div>